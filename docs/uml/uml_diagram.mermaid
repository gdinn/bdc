classDiagram
    class BaseModel {
        <<abstract>>
        #id: Integer
        #createdAt: DateTime
        #updatedAt: DateTime
        #deletedAt: DateTime?
        +isDeleted(): Boolean
        +softDelete(): void
        +restore(): void
        +getAuditInfo(): AuditInfo
    }

    class AuditInfo {
        +createdAt: DateTime
        +updatedAt: DateTime
        +deletedAt: DateTime?
        +isActive: Boolean
    }    

    class User {
        -id: Integer
        -name: String
        -email: String
        -phone: String
        -birthDate: Date
        -type: UserType
        -ageGroup: UserAgeGroup
        -isManager: Boolean
        -isAdvisor: Boolean
        +checkPermissions(): UserPermission
        +listAssociatedApartments(): List~Apartment~
    }

    class Apartment {
        -id: Integer
        -number: String
        -building: String
        +addUser(user: User): void
        +removeUser(user: User): void
        +assignLegalRep(user: User): void
        +addVehicle(vehicle: Vehicle): void
        +addPet(pet: Pet): void
        +addBicycle(bicycle: Bicycle): void
    }

    class Vehicle {
        -id: Integer
        -plate: String
        -model: String
        -color: String
        -year: Integer
        -parkingNumber: String
        -type: VehicleType
    }


    class VehicleType {
        <<enumeration>>
        MOTORCYCLE
        CAR
    }     


    class Pet {
        -id: Integer
        -name: String
        -species: PetSpecies
        -breed: String
        -size: String
    }

    class Bicycle {
        -id: Integer
        -color: String
        -model: String
        -identificationTag: String
    }

    class UserPermission {
        <<enumeration>>
        READ
        WRITE
        READ_WRITE
        NO_PERMISSION
    }

    class UserType {
        <<enumeration>>
        RESIDENT
        EXTERNAL
    }

    class UserAgeGroup {
        <<enumeration>>
        ADULT
        CHILD
    }

    class PetSpecies {
        <<enumeration>>
        DOG
        CAT
        BIRD
        RABBIT
        OTHER
    }       

    %% Relations
    BaseModel <|-- User : inherit
    BaseModel <|-- Apartment : inherit
    BaseModel <|-- Vehicle : inherit
    BaseModel <|-- Pet : inherit
    BaseModel <|-- Bicycle : inherit

    User "0..*" -- "0..*" Apartment : has
    User <--o "0..1" Apartment : has legalRep
    
    Apartment "1" *-- "0..2" Car : has
    Apartment "1" *-- "0..2" Motorcycle : has
    Apartment "1" *-- "0..*" Pet : has
    Apartment "1" *-- "0..*" Bicycle : has

    BaseModel ..> AuditInfo : creates

    User ..> UserPermission : use
    User ..> UserType : use
    User ..> UserAgeGroup : use

    Pet ..> PetSpecies : use

    Vehicle ..> VehicleType : use

    %% Notes about permissions
    note for User "Permissions:\n- Manager: READ_WRITE in all apartments\n- Advisor: READ in all apartments\n- Common Resident: READ_WRITE only in own units"
       